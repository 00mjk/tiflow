# Base Configuration.



# Loader configuration

# Number of threads restoring concurrently for loader worker pool. Each worker restore one file at a time, increase this as TiKV nodes increase
pool-size = 16

# Directory of the dump to import
dir = "./"


# filter

# black white list provides a library to filter replicate on schema/table by given rules
# support regular expression , start with '~' declare use regular expression.
# rules like replication rules in MySQL, ref document:
# https://dev.mysql.com/doc/refman/8.0/en/replication-rules-db-options.html
# https://dev.mysql.com/doc/refman/8.0/en/replication-rules-table-options.html
#[black-white-list]
#do-dbs = ["~^b.*","s1"]
#
#ignore-dbs = ["~^b.*","s1"]
#
#[[black-white-list.do-tables]]
#db-name = "your db"
#tbl-name = "your table"
#
#[[black-white-list.ignore-tables]]
#db-name = "~^b.*"
#tbl-name = "~^a.*"


# filter-rules filter binlog events
#[[filter-rules]]
#schema-pattern = "shard_db_*"
#table-pattern  = "shard_table_*"
# do all dml, ignore all ddl
#events = ["all dml"]
#action = "Do"

#[[filter-rules]]
#schema-pattern = "shard_db_*"
#table-pattern  = "shard_table_*"
# ignore delete sqls and drop table ddls
#events = ["delete", "drop table"]
# regular expression, ignore drop procedure queries
# sql-pattern = ["^DROP\\s+PROCEDURE"]
#action = "Ignore"


# route table

# applied after filter
# our Selector is a two level selector (schemal level, and table level)
# [[route-rules]]
# schema-pattern = "shard_db_*"
# target-schema = "shard_db"
# [[route-rules]]
# schema-pattern = "shard_db_*"
# table-pattern = "shard_table_*"
# target-schema = "shard_db"
# target-table = "shard_table"

# to: the target db
[to]
host = "127.0.0.1"
user = "root"
password = ""
port = 4000
